{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaTrack app tags\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://project-aquatrack-back.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users operations."
    },
    {
      "name": "Water",
      "description": "Operations about water."
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login User",
        "operationId": "loginUser",
        "description": "Log in a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mypassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "500": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register User",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mypassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Refresh session",
        "operationId": "refreshSession",
        "description": "Refresh session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "iqwxK1cJJT+GBPLKWouzPhj2www6iirnMFExdZmA"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "- Session not found\n- Session token expired\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "oneOf": [
                            {
                              "type": "string",
                              "example": "Session not found"
                            },
                            {
                              "type": "string",
                              "example": "Session token expired"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user info",
        "operationId": "getUserInfo",
        "description": "User's info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-2"
          },
          "500": {
            "$ref": "#/components/responses/401-2"
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get count Users",
        "operationId": "countUsers",
        "description": "Retrieve the count of users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "example": "user@email.com"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mypassword"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-3"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/info/avatars": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "User Avatar",
        "operationId": "userAvatar",
        "description": "Upload or update user avatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "avatar"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "84279rnc9rq24r"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-4"
          },
          "500": {
            "$ref": "#/components/responses/401-3"
          }
        }
      }
    },
    "/users/info": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Patch user",
        "operationId": "patchUser",
        "description": "Patch a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "84279rnc9rq24r"
                  },
                  "_id": {
                    "description": "User's id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "user@email.com"
                  },
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "weight": {
                    "description": "User's weight",
                    "type": "number",
                    "example": 50
                  },
                  "dailyActiveTime": {
                    "description": "User's daily active time",
                    "type": "number",
                    "example": 2
                  },
                  "dailyWaterConsumption": {
                    "description": "User's daily water consumption",
                    "type": "number",
                    "example": 1.5
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "women",
                      "men"
                    ]
                  },
                  "photo": {
                    "description": "Link to user's photo",
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-5"
          },
          "500": {
            "$ref": "#/components/responses/401-4"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add water",
        "operationId": "addWater",
        "description": "Add water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "date"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 50,
                    "description": "Amount of water in milliliters"
                  },
                  "date": {
                    "type": "string",
                    "example": 1720918800
                  },
                  "norm": {
                    "type": "number",
                    "example": 1.8,
                    "description": "Water rate in liters"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-2"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401-5"
          }
        }
      }
    },
    "/water/{id}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get the injected amount of water",
        "operationId": "getWater",
        "description": "Get the injected amount of water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6693b609d6192024db757e57"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-g"
          },
          "401": {
            "$ref": "#/components/responses/401-5"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Updated the entered amount of water",
        "operationId": "editWater",
        "description": "Updated the entered amount of water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "60d0fe4f5311236168a109ca"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "anyOf": [
                  {
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "type": "number",
                        "example": 100
                      }
                    }
                  },
                  {
                    "required": [
                      "date"
                    ],
                    "properties": {
                      "date": {
                        "type": "string",
                        "example": 1720918800
                      }
                    }
                  },
                  {
                    "required": [
                      "norm"
                    ],
                    "properties": {
                      "norm": {
                        "type": "number",
                        "example": 1.8
                      }
                    }
                  },
                  {
                    "required": [
                      "amount",
                      "date"
                    ],
                    "properties": {
                      "amount": {
                        "type": "number",
                        "example": 100
                      },
                      "date": {
                        "type": "string",
                        "example": 1720918800
                      },
                      "norm": {
                        "type": "number",
                        "example": 1.8
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-u"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401-5"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete the entered amount of water",
        "operationId": "deleteWater",
        "description": "Delete the entered amount of water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6693b609d6192024db757e57"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-d"
          },
          "401": {
            "$ref": "#/components/responses/401-5"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get daily water consumption for a user",
        "operationId": "getDailyWater",
        "description": "Get daily water consumption for a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": 1720918800
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "6693b609d6192024db757e57"
                          },
                          "amount": {
                            "type": "number",
                            "example": 50
                          },
                          "date": {
                            "type": "string",
                            "example": 1720918800
                          },
                          "norm": {
                            "type": "number",
                            "example": 1.8
                          },
                          "percentage": {
                            "type": "number",
                            "example": 2.78
                          }
                        }
                      }
                    },
                    "dailyAmount": {
                      "type": "number",
                      "example": 50
                    },
                    "dailyPercentage": {
                      "type": "number",
                      "example": 2.78
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-5"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/month/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get monthly water consumption for a user",
        "operationId": "getMonthlyWater",
        "description": "Get monthly water consumption for a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": 1720918800
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "example": 1720918800
                          },
                          "amount": {
                            "type": "number",
                            "example": 50
                          },
                          "percentage": {
                            "type": "number",
                            "example": 2.78
                          }
                        }
                      }
                    },
                    "length": {
                      "type": "number",
                      "example": 31
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-5"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "200": {
        "description": "Successfully register!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Created"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "6IkpXVCJ9.eyJpZCI"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "user@mail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "201": {
        "description": "Successfully register",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Created"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "user@mail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "The error message.",
                  "example": "Error from Joi or other validation library"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Fail login",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Email or password is wrong"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Fail register",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Fail count users",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "enum": [
                    "Invalid email or password",
                    "Email is required",
                    "\"password\" is required",
                    "Email or password is wrong"
                  ]
                }
              }
            }
          }
        }
      },
      "200-2": {
        "description": "Successfully get info",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully get info"
                },
                "data": {
                  "type": "object",
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "401-2": {
        "description": "Fail get info",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "200-3": {
        "description": "Successfully count",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Created"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-4": {
        "description": "Successfully upload Avatar",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "OK"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "6694746"
                    },
                    "photo": {
                      "type": "string",
                      "example": "/avatars/IMG.png"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-3": {
        "description": "Fail avatar",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Not authorized"
                }
              }
            }
          }
        }
      },
      "200-5": {
        "description": "Successfully update",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "OK"
                },
                "data": {
                  "type": "object",
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "401-4": {
        "description": "Fail update",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Not authorized"
                }
              }
            }
          }
        }
      },
      "201-2": {
        "description": "Successfully add water",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully created a water!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "6693b609d6192024db757e57"
                    },
                    "amount": {
                      "type": "number",
                      "example": 50
                    },
                    "date": {
                      "type": "string",
                      "example": 1720717617
                    },
                    "norm": {
                      "type": "number",
                      "example": 1.8
                    },
                    "percentage": {
                      "type": "number",
                      "example": 2.78
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-5": {
        "description": "Unauthorized, token is missing or invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "NotAuthorizedError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message.",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-g": {
        "description": "Successfully get water",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully found water with id 6693b609d6192024db757e57!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "6693b609d6192024db757e57"
                    },
                    "amount": {
                      "type": "number",
                      "example": 50
                    },
                    "date": {
                      "type": "string",
                      "example": 1720717617
                    },
                    "norm": {
                      "type": "number",
                      "example": 1.8
                    },
                    "percentage": {
                      "type": "number",
                      "example": 2.78
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-d": {
        "description": "Successfully delete water",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully delete a water!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "6693b609d6192024db757e57"
                    },
                    "amount": {
                      "type": "number",
                      "example": 50
                    },
                    "date": {
                      "type": "string",
                      "example": 1720717617
                    },
                    "norm": {
                      "type": "number",
                      "example": 1.8
                    },
                    "percentage": {
                      "type": "number",
                      "example": 2.78
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-u": {
        "description": "Successfully update water",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully update a water!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "6693b609d6192024db757e57"
                    },
                    "amount": {
                      "type": "string",
                      "example": 100
                    },
                    "date": {
                      "type": "string",
                      "example": 1720717617
                    },
                    "norm": {
                      "type": "string",
                      "example": 1.8
                    },
                    "percentage": {
                      "type": "string",
                      "example": 5.56
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "email",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "user@email.com"
          },
          "createdAt": {
            "description": "User's create date",
            "type": "string",
            "example": "2024-06-26T20:15:31.235Z"
          },
          "updatedAt": {
            "description": "User's update date",
            "type": "string",
            "example": "2024-06-26T20:15:31.235Z"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "example": 50
          },
          "dailyActiveTime": {
            "description": "User's daily active time",
            "type": "number",
            "example": 2
          },
          "dailyWaterConsumption": {
            "description": "User's daily water consumption",
            "type": "number",
            "example": 1.5
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ]
          },
          "photo": {
            "description": "Link to user's photo",
            "type": "string",
            "example": ""
          }
        }
      }
    }
  }
}